{"version":3,"file":"static/js/740.5767513c.chunk.js","mappings":"8MAGaA,EAAU,mCAAG,WAAMC,EAAKC,GAAX,uFACCC,EAAAA,EAAAA,IAAA,uCAA0CF,GAAO,CACpEG,OAAQ,MACRC,OAAO,CACHC,QAAS,mCACTJ,MAAMA,KALQ,cAChBK,EADgB,yBAQfA,EAASC,MARM,2CAAH,uD,sFCuDvB,UAtDmB,WAAO,IAAD,EAEbC,GAAWC,EAAAA,EAAAA,MAGpB,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMd,EAAK,UAAGa,EAAaE,IAAI,gBAApB,QAAgC,KAC3CC,EAAAA,EAAAA,YAAU,WACHhB,IACJF,EAAAA,EAAAA,GAAW,gBAAiBE,GAAOiB,MAAK,SAAAC,GACrC,OAA2B,IAAxBA,EAAKC,QAAQC,OACL,+BAEJT,EAAUO,EAAKC,QACxB,IACAE,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,EAAd,GACX,GAAC,CAACtB,IAUN,OACC,iCACA,kBAAMyB,SAAU,SAACC,GAAD,OAAOA,EAAEC,gBAAT,EAAhB,WACE,kBAAOC,KAAK,SAASC,KAAK,OAAOC,MAAO9B,EAAM+B,SAXxB,SAAAC,GACtB,IAAMC,EAAeD,EAAGE,OAAOJ,MAAMK,OACrC,GAAoB,KAAjBF,EACA,OAAOnB,EAAgB,CAAC,GAE3BA,EAAgB,CAACd,MAAMiC,GACzB,KAMA,mBAAQJ,KAAK,SAAb,wBAKA,wBACGnB,EAAO0B,KAAI,SAAAC,GACT,OACG,yBACG,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAC3BC,MAAO,CAACC,KAAMlC,GADd,SAEE8B,EAAMK,SAHFL,EAAME,GAMpB,QAON,C","sources":["API/API.js","Pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\"\n//const   api_key='f5a68a81db900311929f7e0e465c0c04'\n\nexport const fetchMovie = async(path,query) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/${path}`,{\n        method: 'get',\n        params:{\n            api_key: 'f5a68a81db900311929f7e0e465c0c04',\n            query:query,\n        }\n    })\n    return response.data;\n} \n\n// export const fetchMovie =(path, page, guery)=>{\n//     fetch(`https://api.themoviedb.org/3/movie/550?api_key=${API_Key}&page=${page}`).then(response=>response.json())\n// }","import { fetchMovie } from 'API/API';\nimport {useState, useEffect} from 'react'\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\n   \nconst MoviesPage = () => {\n\n      const location = useLocation();\n// console.log(location)\n\n   const [movies, setMovies]= useState([])\n   const [searchParams, setSearchParams] = useSearchParams()\n   const query = searchParams.get('query') ?? ' ';\n   useEffect(() => {\n      if(!query) return\n      fetchMovie('/search/movie', query).then(resp => {\n         if(resp.results.length === 0){\n            return ('Sorry, but nothing was found')\n         }      \n         return setMovies(resp.results)\n      })\n      .catch(error=>console.log(error))\n      },[query])\n\n   const updateQueryString= ev=>{  \n      const movieIdValue = ev.target.value.trim();\n      if(movieIdValue === ''){\n         return setSearchParams({})\n      }\n      setSearchParams({query:movieIdValue})\n   }\n\n   return(\n    <> \n    <form onSubmit={(e) => e.preventDefault()}>\n      <input name='search' type='text' value={query}onChange={updateQueryString} ></input>\n    <button type='submit'>Search</button>\n    </form>\n\n\n    \n    <ul>\n      {movies.map(movie=>{\n         return(\n            <li key={movie.id}>\n               <Link to={`/movies/${movie.id}`} \n               state={{from: location}}\n               >{movie.title}</Link>\n            </li>\n         )\n      })\n   }\n   \n   </ul>\n   </>\n   \n   )\n}\n\nexport default MoviesPage"],"names":["fetchMovie","path","query","axios","method","params","api_key","response","data","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","then","resp","results","length","catch","error","console","log","onSubmit","e","preventDefault","name","type","value","onChange","ev","movieIdValue","target","trim","map","movie","to","id","state","from","title"],"sourceRoot":""}