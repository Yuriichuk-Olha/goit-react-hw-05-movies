{"version":3,"file":"static/js/473.c2fcd722.chunk.js","mappings":"8MAGaA,EAAU,mCAAG,WAAMC,EAAKC,GAAX,uFACCC,EAAAA,EAAAA,IAAA,uCAA0CF,GAAO,CACpEG,OAAQ,MACRC,OAAO,CACHC,QAAS,mCACTJ,MAAMA,KALQ,cAChBK,EADgB,yBAQfA,EAASC,MARM,2CAAH,uD,sFCoDvB,UAnDqB,WAAK,IAAD,IACfC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACxDC,QAAQC,IAAIL,GAEZI,QAAQC,IAAIP,GAGZ,IAAOQ,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KASA,IAPAC,EAAAA,EAAAA,YAAU,YACNtB,EAAAA,EAAAA,GAAW,SAAD,OAAUiB,IAAWM,MAAK,SAAAC,GAChCH,EAAaG,EAChB,IACAC,OAAM,SAAAC,GAAK,OAAEX,QAAQC,IAAIU,EAAd,GACf,GAAC,CAACT,KAEEG,EACD,OAAO,wCAGT,IAAQO,EAAgFP,EAAhFO,MAAOC,EAAyER,EAAzEQ,SAAUC,EAA+DT,EAA/DS,WAAYC,EAAmDV,EAAnDU,OAAQC,EAA2CX,EAA3CW,aAAcC,EAA6BZ,EAA7BY,YAAaC,EAAgBb,EAAhBa,aACxE,OACM,iCACA,SAAC,KAAD,CAAMC,GAAIvB,EAAiBwB,QAA3B,mBAER,wBAAKR,KACL,gBAAKS,IAAKJ,EAAaK,IAAG,0CAAqCL,GAAeM,MAAM,SACpF,sCACA,6BAAKV,MACL,oCACA,uBAAIE,EAAUA,EAAOS,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAAS,OAC3D,0CAAkBV,MAClB,wCAAgBF,MAChB,0CAAkBI,MAElB,2BACI,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAajB,EAAb,SAAR,qBAEJ,yBACI,SAAC,KAAD,CAAMiB,GAAE,kBAAajB,EAAb,YAAR,2BAGJ,SAAC,EAAAyB,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIX,C","sources":["API/API.js","Pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\"\n//const   api_key='f5a68a81db900311929f7e0e465c0c04'\n\nexport const fetchMovie = async(path,query) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/${path}`,{\n        method: 'get',\n        params:{\n            api_key: 'f5a68a81db900311929f7e0e465c0c04',\n            query:query,\n        }\n    })\n    return response.data;\n} \n\n// export const fetchMovie =(path, page, guery)=>{\n//     fetch(`https://api.themoviedb.org/3/movie/550?api_key=${API_Key}&page=${page}`).then(response=>response.json())\n// }","import { fetchMovie } from \"API/API\"\nimport { Suspense, useEffect, useRef, useState } from \"react\"\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\"\n\nconst MovieDetails = ()=>{\n    const location = useLocation();\n    const backLinkLocstion = useRef(location.state?.form ?? '/movies')\n    console.log(backLinkLocstion)\n    \n    console.log(location)\n\n\n    const {movieId} = useParams()\n    const [movieData, setMovieData] = useState(null);\n\n    useEffect(()=>{\n        fetchMovie(`movie/${movieId}`).then(resp=>{\n            setMovieData(resp)\n        })\n        .catch(error=>console.log(error))\n    },[movieId])\n\n    if (!movieData) {\n        return <div>Loading...</div>;\n      }\n\n      const { title, overview, popularity, genres, release_date, poster_path, vote_average} = movieData\n      return(\n            <>\n            <Link to={backLinkLocstion.current}>Back</Link>\n            \n    <h1>{title}</h1>\n    <img alt={poster_path} src={`https://image.tmdb.org/t/p/w500/${poster_path}`} width='250'/>\n    <h2>Overview</h2>\n    <p> {overview}</p>\n    <h3>Genres</h3>\n    <p>{genres ? (genres.map(({ name }) => name).join(', ')) : \" \"}</p>\n    <p>Release date: {release_date}</p>\n    <p>Popularity: {popularity}</p>\n    <p>Vote average: {vote_average}</p>\n    \n    <ul>\n        <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        </li>\n        <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n            <Outlet/>\n        </Suspense>\n        </>\n        )\n}\nexport default MovieDetails"],"names":["fetchMovie","path","query","axios","method","params","api_key","response","data","location","useLocation","backLinkLocstion","useRef","state","form","console","log","movieId","useParams","useState","movieData","setMovieData","useEffect","then","resp","catch","error","title","overview","popularity","genres","release_date","poster_path","vote_average","to","current","alt","src","width","map","name","join","Suspense","fallback"],"sourceRoot":""}